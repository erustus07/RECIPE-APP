import {
  tokens_default
} from "../chunk-PXPI3F43.js";
import {
  custom_elements_default
} from "../chunk-HM7LLTML.js";
import "../chunk-DP56CNHS.js";

// src/radio-buttons/radio-buttons.tsx
import { jsx as _jsx } from "atomico/jsx-runtime";
import {
  c,
  css,
  useRef,
  useProp,
  useEffect
} from "atomico";
import { useSlot } from "@atomico/hooks/use-slot";
import { addListener } from "@atomico/hooks/use-listener";
import { useFormInputHidden } from "@atomico/hooks/use-form";
function radioButtons({
  name,
  vertical
}) {
  const [value, setValue] = useProp("value");
  const refSlot = useRef();
  const slots = useSlot(refSlot).filter((el) => el);
  useEffect(() => {
    const listeners = slots.map((el) => {
      el.size = "small";
      el.ghost = true;
      return addListener(el, "click", (event) => setValue(event.currentTarget.value));
    });
    return () => listeners.forEach((remove) => remove());
  }, slots);
  slots.forEach((el) => {
    el.color = value == el.value ? "primary" : null;
    if (!el.hasAttribute("data-justify")) {
      el.setAttribute("data-justify", el.justify || "start");
    }
    el.justify = vertical ? el.getAttribute("data-justify") : null;
  });
  useFormInputHidden(name || "", value || "");
  return /* @__PURE__ */ _jsx("host", {
    shadowDom: true
  }, /* @__PURE__ */ _jsx("slot", {
    ref: refSlot
  }));
}
radioButtons.props = {
  name: String,
  value: {
    type: String,
    event: {
      type: "change"
    }
  },
  vertical: {
    type: Boolean,
    reflect: true
  }
};
radioButtons.styles = [
  tokens_default,
  css`:host {
            --flow: row nowrap;
            max-width: 100%;
            background: var(--color-input-60);
            min-height: var(--size-xl);
            display: flex;
            align-items: center;
            flex-flow: var(--flow);
            border-radius: var(--border-radius);
            padding: var(--size);
            box-sizing: border-box;
            gap: var(--size);
            overflow: auto hidden;
        }
        :host([vertical]) {
            --flow: column;
        }`
];
var RadioButtons = c(radioButtons);
custom_elements_default.define("radio-buttons", RadioButtons);
export {
  RadioButtons
};
