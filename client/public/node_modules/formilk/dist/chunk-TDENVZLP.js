import {
  Tab
} from "./chunk-U2T6ZZGX.js";
import {
  custom_elements_default
} from "./chunk-HM7LLTML.js";

// src/tabs/tabs.tsx
import { jsx as _jsx } from "atomico/jsx-runtime";
import { c, css, useRef, useProp } from "atomico";
import { useProxySlot } from "@atomico/hooks/use-slot";
function tabs({ position }) {
  const [value, setValue] = useProp("value");
  const refSlots = useRef();
  const slots = useProxySlot(refSlots);
  slots.forEach((el) => el.ghost = true);
  return /* @__PURE__ */ _jsx("host", {
    shadowDom: true
  }, /* @__PURE__ */ _jsx("slot", {
    ref: refSlots
  }), /* @__PURE__ */ _jsx("div", {
    class: "tabs"
  }, slots.map((el, index) => /* @__PURE__ */ _jsx(Tab, {
    active: el.value === value,
    position,
    onclick: () => setValue(el.value)
  }, /* @__PURE__ */ _jsx("slot", {
    name: el.slot = `tab-${index}`
  })))));
}
tabs.props = {
  name: String,
  value: {
    type: String,
    event: {
      type: "change"
    }
  },
  position: {
    type: String,
    reflect: true
  }
};
tabs.styles = css`:host {
        --flow: row nowrap;
    }
    :host([position="left"]),
    :host([position="right"]) {
        --flow: column;
    }
    [name="mark"] {
        display: none;
    }
    .tabs {
        display: flex;
        flex-flow: var(--flow);
    }`;
var Tabs = c(tabs);
custom_elements_default.define("tabs", Tabs);

export {
  Tabs
};
