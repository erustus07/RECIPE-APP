import {
  Button
} from "./chunk-WZK6LTL7.js";
import {
  custom_elements_default
} from "./chunk-HM7LLTML.js";

// src/calendar/calendar.tsx
import { jsx as _jsx } from "atomico/jsx-runtime";
import { c, css, useProp } from "atomico";

// node_modules/@uppercod/calendar/dist/calendar.js
var getMonthString = (month) => month.getFullYear() + "-" + month.getMonth();
function getMonthRowsFromDate(date, day = 1) {
  let month = new Date(date.getFullYear(), date.getMonth());
  let firstDay = month.getDay();
  let i = 0;
  let week = [];
  let rows = [];
  let end = getMonthString(month);
  month.setDate((firstDay - day) * -1 + 1);
  while (true) {
    if (Number.isInteger(i / 7)) {
      if (end < getMonthString(month))
        break;
      rows.push(week = []);
    }
    week.push(new Date(month));
    month.setDate(month.getDate() + 1);
    i++;
  }
  return rows;
}

// src/calendar/calendar.tsx
function calendar() {
  const month = getMonthRowsFromDate(new Date(2022, 1));
  const [fistWeek] = month;
  const [currentDay, setCurrentDay] = useProp("day");
  return /* @__PURE__ */ _jsx("host", {
    shadowDom: true
  }, /* @__PURE__ */ _jsx("table", null, /* @__PURE__ */ _jsx("tr", null, fistWeek.map((day) => /* @__PURE__ */ _jsx("td", {
    class: "td"
  }, day.toLocaleDateString(void 0, {
    weekday: "short"
  }).replace(".", "")))), month.map((week) => /* @__PURE__ */ _jsx("tr", null, week.map((day) => /* @__PURE__ */ _jsx("td", {
    class: "td"
  }, /* @__PURE__ */ _jsx(Button, {
    size: "small",
    class: "button",
    ghost: day.getTime() !== currentDay?.getTime(),
    onclick: (event) => {
      setCurrentDay(day);
      console.log(day);
    }
  }, /* @__PURE__ */ _jsx("strong", {
    slot: "prefix"
  }, day.getDate()))))))));
}
calendar.props = {
  day: Date
};
calendar.styles = css`:host {
        display: block;
    }
    .td {
        text-align: center;
    }`;
var Calendar = c(calendar);
custom_elements_default.define("input-calendar", Calendar);

export {
  Calendar
};
