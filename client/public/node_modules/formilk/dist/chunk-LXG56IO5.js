import {
  Icons
} from "./chunk-WYOR2HJX.js";
import {
  tokens_default
} from "./chunk-PXPI3F43.js";
import {
  custom_elements_default
} from "./chunk-HM7LLTML.js";

// src/icon/icon.tsx
import { jsx as _jsx } from "atomico/jsx-runtime";
import { c, css, useHost } from "atomico";
function icon({ type, size, status }) {
  const {
    current: { constructor }
  } = useHost();
  const Icon2 = constructor[type];
  return /* @__PURE__ */ _jsx("host", {
    shadowDom: true
  }, /* @__PURE__ */ _jsx(Icon2, {
    cloneNode: true
  }), /* @__PURE__ */ _jsx("style", null, size && `:host{--width: var(--size-${size});}`, status && `:host{--color-status: var(--color-status-${status});}`));
}
icon.props = {
  type: {
    type: String,
    reflect: true,
    value: () => "check"
  },
  size: {
    type: String,
    reflect: true,
    value: "xs"
  },
  define: {
    type: String,
    reflect: true
  },
  status: {
    type: String,
    reflect: true
  }
};
icon.styles = [
  tokens_default,
  css`:host {
            width: var(--width);
            display: inline-flex;
            align-items: center;
            justify-items: center;
        }
        svg {
            width: 100%;
            margin: auto;
        }
        path {
            fill: var(
                --color-status,
                var(--color-current-contrast, currentColor)
            );
        }
        :host([define]) {
            display: none;
        }`
];
var Icon = Object.assign(c(icon), Icons);
custom_elements_default.define("icon", Icon);

export {
  Icon
};
