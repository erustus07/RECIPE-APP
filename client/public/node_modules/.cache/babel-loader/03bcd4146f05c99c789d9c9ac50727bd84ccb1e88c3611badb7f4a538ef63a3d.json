{"ast":null,"code":"var _jsxFileName = \"/home/erustus/Documents/RECIPE-APP/client/src/components/RatingComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RatingComponent = ({\n  recipeId\n}) => {\n  _s();\n  const [ratings, setRatings] = useState([]);\n  const [newRating, setNewRating] = useState(\"\");\n  const fetchRatings = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/recipes/${recipeId}/ratings`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const data = await response.json();\n      setRatings(data); // Assuming data is an array of ratings\n    } catch (error) {\n      console.error(\"Error fetching ratings:\", error);\n      setRatings([]); // Set ratings to an empty array on error\n    }\n  };\n  useEffect(() => {\n    fetchRatings();\n  }, [recipeId]);\n  const handleAddRating = async e => {\n    e.preventDefault();\n    try {\n      const payload = {\n        score: newRating\n      }; // Create the payload\n\n      const response = await fetch(`http://localhost:5000/recipes/${recipeId}/ratings`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(payload),\n        // Use score here\n        credentials: 'include' // Include credentials in the request\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        alert(`Failed to add rating: ${data.message}`);\n        throw new Error(\"Failed to add rating\");\n      } else {\n        alert(\"Rating added successfully!\");\n        fetchRatings(); // Refresh ratings after adding new rating\n      }\n      setNewRating(\"\"); // Clear input field after successful rating submission\n    } catch (error) {\n      console.error(\"Error adding rating:\", error);\n    }\n  };\n  const renderStars = rating => {\n    const fullStars = Math.floor(rating);\n    const halfStars = rating % 1 >= 0.5 ? 1 : 0;\n    const emptyStars = 5 - fullStars - halfStars;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: ['★'.repeat(fullStars), halfStars ? '☆' : '', '☆'.repeat(emptyStars)]\n    }, void 0, true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Ratings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"ratings-container\",\n      children: ratings.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No ratings yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this) : ratings.map(rating => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [renderStars(rating.score), \" \"]\n      }, rating.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddRating,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: newRating,\n        onChange: e => setNewRating(e.target.value),\n        placeholder: \"Add a rating...\",\n        min: \"1\",\n        max: \"5\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Rating\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(RatingComponent, \"Gzre/WmTI1+8/VTOXnmycyWaWDI=\");\n_c = RatingComponent;\nexport default RatingComponent;\nvar _c;\n$RefreshReg$(_c, \"RatingComponent\");","map":{"version":3,"names":["React","useState","useEffect","Fragment","_Fragment","jsxDEV","_jsxDEV","RatingComponent","recipeId","_s","ratings","setRatings","newRating","setNewRating","fetchRatings","response","fetch","ok","Error","status","data","json","error","console","handleAddRating","e","preventDefault","payload","score","method","headers","body","JSON","stringify","credentials","alert","message","renderStars","rating","fullStars","Math","floor","halfStars","emptyStars","children","repeat","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","id","onSubmit","type","value","onChange","target","placeholder","min","max","required","_c","$RefreshReg$"],"sources":["/home/erustus/Documents/RECIPE-APP/client/src/components/RatingComponent.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst RatingComponent = ({ recipeId }) => {\n  const [ratings, setRatings] = useState([]);\n  const [newRating, setNewRating] = useState(\"\");\n\n  const fetchRatings = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/recipes/${recipeId}/ratings`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const data = await response.json();\n      setRatings(data); // Assuming data is an array of ratings\n    } catch (error) {\n      console.error(\"Error fetching ratings:\", error);\n      setRatings([]); // Set ratings to an empty array on error\n    }\n  };\n\n  useEffect(() => {\n    fetchRatings();\n  }, [recipeId]);\n\n  const handleAddRating = async (e) => {\n    e.preventDefault();\n    try {\n      const payload = { score: newRating };  // Create the payload\n\n      const response = await fetch(`http://localhost:5000/recipes/${recipeId}/ratings`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(payload),  // Use score here\n        credentials: 'include', // Include credentials in the request\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        alert(`Failed to add rating: ${data.message}`);\n        throw new Error(\"Failed to add rating\");\n      } else {\n        alert(\"Rating added successfully!\");\n        fetchRatings(); // Refresh ratings after adding new rating\n      }\n      setNewRating(\"\"); // Clear input field after successful rating submission\n    } catch (error) {\n      console.error(\"Error adding rating:\", error);\n    }\n  };\n\n  const renderStars = (rating) => {\n    const fullStars = Math.floor(rating);\n    const halfStars = rating % 1 >= 0.5 ? 1 : 0;\n    const emptyStars = 5 - fullStars - halfStars;\n\n    return (\n      <>\n        {'★'.repeat(fullStars)}\n        {halfStars ? '☆' : ''}\n        {'☆'.repeat(emptyStars)}\n      </>\n    );\n  };\n\n  return (\n    <div>\n      <h3>Ratings</h3>\n      <ul className=\"ratings-container\">\n        {ratings.length === 0 ? (\n          <p>No ratings yet.</p>\n        ) : (\n          ratings.map((rating) => (\n            <p key={rating.id}>\n              {renderStars(rating.score)} {/* Render stars based on rating score */}\n            </p>\n          ))\n        )}\n      </ul>\n      <form onSubmit={handleAddRating}>\n        <input\n          type=\"number\"\n          value={newRating}\n          onChange={(e) => setNewRating(e.target.value)}\n          placeholder=\"Add a rating...\"\n          min=\"1\"\n          max=\"5\"\n          required\n        />\n        <button type=\"submit\">Add Rating</button>\n      </form>\n    </div>\n  );\n};\n\nexport default RatingComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}