/**
 * @template {import("atomico").Ref[]} T
 * @param {(args: Args<T>)=>(void | (()=>any))} callback
 * @param {T} args
 * @param {boolean} mode
 */
export function useRefValues<T extends import("atomico").Ref<any>[]>(callback: (args: Args<T>) => (void | (() => any)), args: T, mode: boolean): void;
export type Args<T> = { [I in keyof T]: T[I] extends {
    current?: infer R;
} ? R : any; };
